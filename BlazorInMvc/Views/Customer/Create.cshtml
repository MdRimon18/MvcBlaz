@using Domain.Entity.Settings
@model Customers
 
 
    <div class="container mt-4">
        <div class="card mb-3">
            <div class="card-header">
                <h5 class="mb-0">
                    <a class="btn btn-outline-secondary btn-sm me-2" href="#"><i class="fas fa-arrow-left"></i></a>
                    Customer Profile Entry
                </h5>
            </div>
            <form id="customerForm" enctype="multipart/form-data" class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="CustomerName" class="form-label fw-semibold">Enter Name<span class="error-star">*</span></label>
                            <input id="CustomerName" name="CustomerName" class="form-control form-control-sm form-rounded" placeholder="Enter Name" required>
                        </div>
                        <div class="mb-3">
                            <label for="MobileNo" class="form-label fw-semibold">Mobile Number<span class="error-star">*</span></label>
                            <input id="MobileNo" name="MobileNo"   class="form-control form-control-sm form-rounded" placeholder="Enter Mobile Number" required >
  
                        </div>
                        <div class="mb-3">
                            <label for="Email" class="form-label fw-semibold">Email</label>
                            <input id="Email" name="Email" type="email" class="form-control form-control-sm form-rounded" placeholder="Write Email">
                        </div>
                        <div class="mb-3">
                            <label for="CountryId" class="form-label fw-semibold">Select Country<span class="error-star">*</span></label>
                            <select id="CountryId" name="CountryId" class="form-select form-control-sm form-rounded" required>
                                <option value="">Select Country</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <h6 class="mb-3">Upload Image</h6>
                        <div class="mb-3">
                            <img id="imagePreview" src="" alt="Image Preview" class="rounded-circle" style="width: 160px; height: 160px; object-fit: cover; display: none;">
                        </div>
                        <input type="file" name="imageFile" id="fileInput" class="form-control form-control-sm form-rounded" accept="image/*">
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="StateName" class="form-label fw-semibold">State Name</label>
                            <input id="StateName" name="StateName" class="form-control form-control-sm form-rounded" placeholder="Enter Your State Name">
                        </div>
                        <div class="mb-3">
                            <label for="Occupation" class="form-label fw-semibold">Occupation</label>
                            <input id="Occupation" name="Occupation" class="form-control form-control-sm form-rounded" placeholder="Occupation">
                        </div>
                        <div class="mb-3">
                            <label for="OfficeName" class="form-label fw-semibold">Office Name</label>
                            <input id="OfficeName" name="OfficeName" class="form-control form-control-sm form-rounded" placeholder="Office Name">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="CustAddrssOne" class="form-label fw-semibold">Address One</label>
                            <textarea id="CustAddrssOne" name="CustAddrssOne" rows="3" class="form-control form-control-sm form-rounded" placeholder="Customer Address One"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="CustAddrssTwo" class="form-label fw-semibold">Address Two</label>
                            <textarea id="CustAddrssTwo" name="CustAddrssTwo" rows="3" class="form-control form-control-sm form-rounded" placeholder="Customer Address Two"></textarea>
                        </div>
                    </div>
                </div>
                <input id="CustomerId" name="CustomerId" type="hidden" value="0">
                <div class="d-flex justify-content-end mt-3">
                    <button type="submit" class="btn btn-primary btn-sm me-2">Save</button>
                    <button type="reset" class="btn btn-secondary btn-sm" id="resetBtn">Refresh</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('customerForm');
            const fileInput = document.getElementById('fileInput');
            const imagePreview = document.getElementById('imagePreview');
            const customerIdInput = document.getElementById('CustomerId');

            // === Image Preview ===
            fileInput.addEventListener('change', function () {
                const file = fileInput.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        imagePreview.src = e.target.result;
                        imagePreview.style.display = 'block';
                    };
                    reader.readAsDataURL(file);
                }
            });

            // === Form Submit ===
            form.addEventListener('submit', async function (e) {
                e.preventDefault();

                // === Client-side Validation ===
                if (!form.checkValidity()) {
                    form.classList.add('was-validated');
                    return;
                }

                const formData = new FormData(form);
                const customerId = parseInt(customerIdInput.value);

                try {
                    const response = await fetch('/api/Customer', {
                        method: 'POST',
                        body: formData
                    });

                    if (response.ok) {
                        if (customerId === 0) {
                            const result = await response.json();
                            alert('Customer created successfully with ID: ' + result.customerId);
                            customerIdInput.value = result.customerId;
                        } else {
                            alert('Customer updated successfully');
                        }
                    } else {
                        const error = await response.text();
                        alert('Error: ' + error);
                    }
                } catch (error) {
                    alert('Request failed: ' + error.message);
                }
            });

            // === Reset Button ===
            document.getElementById('resetBtn').addEventListener('click', function () {
                imagePreview.style.display = 'none';
                imagePreview.src = '';
                customerIdInput.value = 0;
            });

            // === Optional: Populate dropdown (e.g. Country list) ===
            loadCountries();

            async function loadCountries() {
                const countrySelect = document.getElementById('CountryId');
                try {
                    const res = await fetch('/api/Country/GetAll');
                    if (res.ok) {
                        const countries = await res.json();
                        countries.forEach(country => {
                            const option = document.createElement('option');
                            option.value = country.id;
                            option.textContent = country.name;
                            countrySelect.appendChild(option);
                        });
                    }
                } catch (err) {
                    console.error('Failed to load countries:', err);
                }
            }
        });
    </script>

 